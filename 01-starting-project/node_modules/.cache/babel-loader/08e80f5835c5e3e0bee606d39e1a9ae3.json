{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\Start_Any_Project\\\\01-starting-project\\\\src\\\\Components\\\\Contact_Me\\\\contact_me.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport Method from \"../ContactME/methods\";\nimport React, { useState } from \"react\";\nimport useInput from \"../../Hooks/user-input\";\nimport \"./contact_me.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckTextIsValid = value => {\n  return value.trim() !== \"\";\n};\n\n_c = CheckTextIsValid;\n\nconst CheckEmailIsValid = value => {\n  return value.includes(\"@\");\n};\n\n_c2 = CheckEmailIsValid;\n\nconst Contact_Me = () => {\n  _s();\n\n  const {\n    value: enteredValue,\n    hasError: nameInputHasError,\n    ValueChangeHandler: nameChangedHandler,\n    InputBlurHandler: nameBlurHandler,\n    isValid: valueIsValid,\n    reset: resetInputName\n  } = useInput(CheckTextIsValid);\n  const [enteredEmail, SetEnteredEmail] = useState(\"\");\n  const [EmailIsValid, SetEnteredEmailIsValid] = useState(false);\n  const [emailIstouched, SetEmailIsTouched] = useState(false);\n  const [enteredMsg, SetEnteredMsg] = useState(\"\");\n  const [MsgIsValid, SetEnteredMsgIsValid] = useState(false);\n  const [MsgIstouched, SetMsgIsTouched] = useState(false);\n  const EmailValidity = !EmailIsValid && emailIstouched;\n  const MsgValidity = !MsgIsValid && MsgIstouched;\n\n  const EmailChangeHandler = event => {\n    SetEnteredEmail(event.target.value);\n    SetEnteredEmailIsValid(CheckEmailIsValid(event.target.value));\n    console.log(event.target.value);\n  };\n\n  const MsgChangeHandler = event => {\n    SetEnteredMsg(event.target.value);\n    SetEnteredMsgIsValid(CheckTextIsValid(event.target.value));\n    console.log(event.target.value);\n  };\n\n  const FormSubmitHandler = event => {\n    event.preventDefault();\n    resetInputName();\n    SetEnteredMsg(\"\");\n    SetEnteredEmail(\"\");\n    SetEmailIsTouched(true);\n    SetMsgIsTouched(true);\n  };\n\n  const EmailInputBlurHandler = () => {\n    SetEmailIsTouched(true);\n  };\n\n  const MsgInputBlurHandler = () => {\n    SetMsgIsTouched(true);\n  };\n\n  let FormIsValid = false;\n  if (valueIsValid && EmailIsValid && MsgIsValid) FormIsValid = true;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_me_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"contact_me_heading\",\n        children: \"Contact_Me_\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact_methods\",\n          children: /*#__PURE__*/_jsxDEV(Method, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"contact_details\",\n          onSubmit: FormSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name_email\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              className: `name_ip ${!nameInputHasError ? \"noError\" : \"error\"}`,\n              placeholder: \"NAME\",\n              onChange: nameChangedHandler,\n              value: enteredValue,\n              onBlur: nameBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              required: true,\n              className: `email_ip ${!EmailValidity ? \"noError\" : \"error\"}`,\n              placeholder: \"EMAIL\",\n              onChange: EmailChangeHandler,\n              value: enteredEmail,\n              onBlur: EmailInputBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"90%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              className: `message ${!MsgValidity ? \"noError\" : \"error\"}`,\n              placeholder: \"MESSAGE\",\n              onChange: MsgChangeHandler,\n              value: enteredMsg,\n              onBlur: MsgInputBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !FormIsValid,\n            className: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact_Me, \"0B8knzAL6SP9DIAKnEKD/RJdejo=\", false, function () {\n  return [useInput];\n});\n\n_c3 = Contact_Me;\nexport default Contact_Me;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckTextIsValid\");\n$RefreshReg$(_c2, \"CheckEmailIsValid\");\n$RefreshReg$(_c3, \"Contact_Me\");","map":{"version":3,"sources":["D:/Web development/Start_Any_Project/01-starting-project/src/Components/Contact_Me/contact_me.js"],"names":["Fragment","Method","React","useState","useInput","CheckTextIsValid","value","trim","CheckEmailIsValid","includes","Contact_Me","enteredValue","hasError","nameInputHasError","ValueChangeHandler","nameChangedHandler","InputBlurHandler","nameBlurHandler","isValid","valueIsValid","reset","resetInputName","enteredEmail","SetEnteredEmail","EmailIsValid","SetEnteredEmailIsValid","emailIstouched","SetEmailIsTouched","enteredMsg","SetEnteredMsg","MsgIsValid","SetEnteredMsgIsValid","MsgIstouched","SetMsgIsTouched","EmailValidity","MsgValidity","EmailChangeHandler","event","target","console","log","MsgChangeHandler","FormSubmitHandler","preventDefault","EmailInputBlurHandler","MsgInputBlurHandler","FormIsValid","width"],"mappings":"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","sourcesContent":["import { Fragment } from \"react/cjs/react.production.min\";\r\nimport Method from \"../ContactME/methods\";\r\nimport React, { useState } from \"react\";\r\nimport useInput from \"../../Hooks/user-input\";\r\nimport \"./contact_me.css\";\r\n\r\nconst CheckTextIsValid = (value) => {\r\n  return value.trim() !== \"\";\r\n};\r\n\r\nconst CheckEmailIsValid = (value) => {\r\n  return value.includes(\"@\");\r\n};\r\n\r\nconst Contact_Me = () => {\r\n\r\nconst {\r\n    value: enteredValue,\r\n    hasError:nameInputHasError,\r\n    ValueChangeHandler:nameChangedHandler,\r\n    InputBlurHandler:nameBlurHandler,\r\n    isValid:valueIsValid,\r\n    reset:resetInputName\r\n  }=useInput(CheckTextIsValid);\r\n\r\n  const [enteredEmail, SetEnteredEmail] = useState(\"\");\r\n  const [EmailIsValid, SetEnteredEmailIsValid] = useState(false);\r\n  const [emailIstouched, SetEmailIsTouched] = useState(false)\r\n  ;\r\n  const [enteredMsg, SetEnteredMsg] = useState(\"\");\r\n  const [MsgIsValid, SetEnteredMsgIsValid] = useState(false);\r\n  const [MsgIstouched, SetMsgIsTouched] = useState(false);\r\n\r\n  const EmailValidity = !EmailIsValid && emailIstouched;\r\n  const MsgValidity = !MsgIsValid && MsgIstouched;\r\n\r\n\r\n  const EmailChangeHandler = (event) => {\r\n    SetEnteredEmail(event.target.value);\r\n    SetEnteredEmailIsValid(CheckEmailIsValid(event.target.value));\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const MsgChangeHandler = (event) => {\r\n    SetEnteredMsg(event.target.value);\r\n    SetEnteredMsgIsValid(CheckTextIsValid(event.target.value));\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const FormSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    resetInputName();\r\n    SetEnteredMsg(\"\");\r\n    SetEnteredEmail(\"\");\r\n    SetEmailIsTouched(true);\r\n    SetMsgIsTouched(true);\r\n  };\r\n\r\n  const EmailInputBlurHandler = () => {\r\n    SetEmailIsTouched(true);\r\n  };\r\n\r\n  const MsgInputBlurHandler = () => {\r\n    SetMsgIsTouched(true);\r\n  };\r\n\r\n  let FormIsValid = false;\r\n\r\n  if (valueIsValid && EmailIsValid && MsgIsValid) FormIsValid = true;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"contact_me_container\">\r\n        <h1 className=\"contact_me_heading\">Contact_Me_</h1>\r\n        <div className=\"data_container\">\r\n          <div className=\"contact_methods\">\r\n            <Method></Method>\r\n          </div>\r\n          <form\r\n            className=\"contact_details\"\r\n            onSubmit={FormSubmitHandler}\r\n          >\r\n            <div className=\"name_email\">\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className={`name_ip ${!nameInputHasError ? \"noError\" : \"error\"}`}\r\n                placeholder=\"NAME\"\r\n                onChange={nameChangedHandler}\r\n                value={enteredValue}\r\n                onBlur={nameBlurHandler}\r\n              ></input>\r\n              <input\r\n                type=\"email\"\r\n                required\r\n                className={`email_ip ${!EmailValidity ? \"noError\" : \"error\"}`}\r\n                placeholder=\"EMAIL\"\r\n                onChange={EmailChangeHandler}\r\n                value={enteredEmail}\r\n                onBlur={EmailInputBlurHandler}\r\n              ></input>\r\n            </div>\r\n            <div style={{ width: \"90%\" }}>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className={`message ${!MsgValidity ? \"noError\" : \"error\"}`}\r\n                placeholder=\"MESSAGE\"\r\n                onChange={MsgChangeHandler}\r\n                value={enteredMsg}\r\n                onBlur={MsgInputBlurHandler}\r\n              ></input>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!FormIsValid}\r\n              className=\"submit\"\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contact_Me;\r\n"]},"metadata":{},"sourceType":"module"}