{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\Start_Any_Project\\\\01-starting-project\\\\src\\\\Components\\\\Contact_Me\\\\contact_me.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport Method from \"../ContactME/methods\";\nimport React, { useState } from \"react\";\nimport useInput from \"../../Hooks/user-input\";\nimport \"./contact_me.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckTextIsValid = value => {\n  return value.trim() !== \"\";\n};\n\n_c = CheckTextIsValid;\n\nconst CheckEmailIsValid = value => {\n  return value.includes(\"@\");\n};\n\n_c2 = CheckEmailIsValid;\n\nconst Contact_Me = () => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    ValueChangeHandler: nameChangedHandler,\n    InputBlurHandler: nameBlurHandler,\n    isValid: nameIsValid,\n    reset: resetInputName\n  } = useInput(CheckTextIsValid);\n  const {\n    value: enteredEmail,\n    hasError: EmailInputHasError,\n    ValueChangeHandler: EmailChangedHandler,\n    InputBlurHandler: EmailBlurHandler,\n    isValid: EmailIsValid,\n    reset: resetInputEmail\n  } = useInput(CheckEmailIsValid);\n  const {\n    value: enteredMsg,\n    hasError: MsgInputHasError,\n    ValueChangeHandler: MsgChangedHandler,\n    InputBlurHandler: MsgBlurHandler,\n    isValid: MsgIsValid,\n    reset: resetInputMsg\n  } = useInput(CheckTextIsValid);\n\n  const FormSubmitHandler = event => {\n    event.preventDefault();\n    resetInputName();\n    resetInputEmail();\n    resetInputMsg();\n  };\n\n  let FormIsValid = false;\n  if (nameIsValid && EmailIsValid && MsgIsValid) FormIsValid = true;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_me_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"contact_me_heading\",\n        children: \"Contact_Me_\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact_methods\",\n          children: /*#__PURE__*/_jsxDEV(Method, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"contact_details\",\n          onSubmit: FormSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name_email\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              className: `name_ip ${!nameInputHasError ? \"noError\" : \"error\"}`,\n              placeholder: \"NAME\",\n              onChange: nameChangedHandler,\n              value: enteredName,\n              onBlur: nameBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              required: true,\n              className: `email_ip ${!EmailInputHasError ? \"noError\" : \"error\"}`,\n              placeholder: \"EMAIL\",\n              onChange: EmailChangedHandler,\n              value: enteredEmail,\n              onBlur: EmailBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"90%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              className: `message ${!MsgInputHasError ? \"noError\" : \"error\"}`,\n              placeholder: \"MESSAGE\",\n              onChange: MsgChangedHandler,\n              value: enteredMsg,\n              onBlur: MsgBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !FormIsValid,\n            className: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact_Me, \"MD4juQH7UxP4NPErubJnkidvi08=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c3 = Contact_Me;\nexport default Contact_Me;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckTextIsValid\");\n$RefreshReg$(_c2, \"CheckEmailIsValid\");\n$RefreshReg$(_c3, \"Contact_Me\");","map":{"version":3,"sources":["D:/Web development/Start_Any_Project/01-starting-project/src/Components/Contact_Me/contact_me.js"],"names":["Fragment","Method","React","useState","useInput","CheckTextIsValid","value","trim","CheckEmailIsValid","includes","Contact_Me","enteredName","hasError","nameInputHasError","ValueChangeHandler","nameChangedHandler","InputBlurHandler","nameBlurHandler","isValid","nameIsValid","reset","resetInputName","enteredEmail","EmailInputHasError","EmailChangedHandler","EmailBlurHandler","EmailIsValid","resetInputEmail","enteredMsg","MsgInputHasError","MsgChangedHandler","MsgBlurHandler","MsgIsValid","resetInputMsg","FormSubmitHandler","event","preventDefault","FormIsValid","width"],"mappings":"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","sourcesContent":["import { Fragment } from \"react/cjs/react.production.min\";\r\nimport Method from \"../ContactME/methods\";\r\nimport React, { useState } from \"react\";\r\nimport useInput from \"../../Hooks/user-input\";\r\nimport \"./contact_me.css\";\r\n\r\nconst CheckTextIsValid = (value) => {\r\n  return value.trim() !== \"\";\r\n};\r\n\r\nconst CheckEmailIsValid = (value) => {\r\n  return value.includes(\"@\");\r\n};\r\n\r\nconst Contact_Me = () => {\r\n\r\nconst {\r\n    value: enteredName,\r\n    hasError:nameInputHasError,\r\n    ValueChangeHandler:nameChangedHandler,\r\n    InputBlurHandler:nameBlurHandler,\r\n    isValid:nameIsValid,\r\n    reset:resetInputName\r\n  }=useInput(CheckTextIsValid);\r\n\r\n\r\nconst {\r\n    value: enteredEmail,\r\n    hasError:EmailInputHasError,\r\n    ValueChangeHandler:EmailChangedHandler,\r\n    InputBlurHandler:EmailBlurHandler,\r\n    isValid:EmailIsValid,\r\n    reset:resetInputEmail\r\n  }=useInput(CheckEmailIsValid);\r\n\r\n\r\nconst {\r\n    value: enteredMsg,\r\n    hasError:MsgInputHasError,\r\n    ValueChangeHandler:MsgChangedHandler,\r\n    InputBlurHandler:MsgBlurHandler,\r\n    isValid:MsgIsValid,\r\n    reset:resetInputMsg\r\n  }=useInput(CheckTextIsValid);\r\n\r\n  const FormSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    resetInputName();\r\n    resetInputEmail();\r\n    resetInputMsg();\r\n  };\r\n\r\n\r\n  let FormIsValid = false;\r\n\r\n  if (nameIsValid && EmailIsValid && MsgIsValid) FormIsValid = true;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"contact_me_container\">\r\n        <h1 className=\"contact_me_heading\">Contact_Me_</h1>\r\n        <div className=\"data_container\">\r\n          <div className=\"contact_methods\">\r\n            <Method></Method>\r\n          </div>\r\n          <form\r\n            className=\"contact_details\"\r\n            onSubmit={FormSubmitHandler}\r\n          >\r\n            <div className=\"name_email\">\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className={`name_ip ${!nameInputHasError ? \"noError\" : \"error\"}`}\r\n                placeholder=\"NAME\"\r\n                onChange={nameChangedHandler}\r\n                value={enteredName}\r\n                onBlur={nameBlurHandler}\r\n              ></input>\r\n              <input\r\n                type=\"email\"\r\n                required\r\n                className={`email_ip ${!EmailInputHasError ? \"noError\" : \"error\"}`}\r\n                placeholder=\"EMAIL\"\r\n                onChange={EmailChangedHandler}\r\n                value={enteredEmail}\r\n                onBlur={EmailBlurHandler}\r\n              ></input>\r\n            </div>\r\n            <div style={{ width: \"90%\" }}>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className={`message ${!MsgInputHasError? \"noError\" : \"error\"}`}\r\n                placeholder=\"MESSAGE\"\r\n                onChange={MsgChangedHandler}\r\n                value={enteredMsg}\r\n                onBlur={MsgBlurHandler}\r\n              ></input>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!FormIsValid}\r\n              className=\"submit\"\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contact_Me;\r\n"]},"metadata":{},"sourceType":"module"}