{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\Start_Any_Project\\\\01-starting-project\\\\src\\\\Components\\\\Contact_Me\\\\contact_me.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport { useState } from \"react\";\nimport Method from \"../ContactME/methods\";\nimport useInput from \"../../Hooks/user-input\";\nimport Thanks from \"../ThankModal/Thanks\";\nimport React from \"react\";\nimport \"./contact_me.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckTextIsValid = value => {\n  return value.trim() !== \"\";\n};\n\n_c = CheckTextIsValid;\n\nconst CheckEmailIsValid = value => {\n  return value.includes(\"@\");\n};\n\n_c2 = CheckEmailIsValid;\n\nconst Contact_Me = () => {\n  _s();\n\n  const [display, SetDisplay] = useState(false);\n\n  const MessageHandler = () => {\n    setTimeout(() => {\n      SetDisplay(true);\n    }, 100);\n  };\n\n  const DisplayChanger = () => {\n    SetDisplay(false);\n  };\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    ValueChangeHandler: nameChangedHandler,\n    InputBlurHandler: nameBlurHandler,\n    isValid: nameIsValid,\n    reset: resetInputName\n  } = useInput(CheckTextIsValid);\n  const {\n    value: enteredEmail,\n    hasError: EmailInputHasError,\n    ValueChangeHandler: EmailChangedHandler,\n    InputBlurHandler: EmailBlurHandler,\n    isValid: EmailIsValid,\n    reset: resetInputEmail\n  } = useInput(CheckEmailIsValid);\n  const {\n    value: enteredMsg,\n    hasError: MsgInputHasError,\n    ValueChangeHandler: MsgChangedHandler,\n    InputBlurHandler: MsgBlurHandler,\n    isValid: MsgIsValid,\n    reset: resetInputMsg\n  } = useInput(CheckTextIsValid);\n  const UserData = [{\n    Name: enteredName,\n    Email: enteredEmail,\n    M: enteredMsg\n  }];\n\n  const SendData = Data => {\n    fetch(\"https://prians-9c7e3-default-rtdb.firebaseio.com/data.json\", {\n      method: \"POST\",\n      body: JSON.stringify(Data)\n    });\n  };\n\n  const FormSubmitHandler = event => {\n    event.preventDefault();\n    resetInputName();\n    resetInputEmail();\n    resetInputMsg();\n    SendData(UserData);\n    MessageHandler();\n  };\n\n  let FormIsValid = false;\n  if (nameIsValid && EmailIsValid && MsgIsValid) FormIsValid = true;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [display && /*#__PURE__*/_jsxDEV(Thanks, {\n      onClose: DisplayChanger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_me_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"contact_me_heading\",\n        children: \"Contact_Me_\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact_methods\",\n          children: /*#__PURE__*/_jsxDEV(Method, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"contact_details\",\n          onSubmit: FormSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name_email\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              className: `name_ip ${!nameInputHasError ? \"noError\" : \"error\"}`,\n              placeholder: \"NAME\",\n              onChange: nameChangedHandler,\n              value: enteredName,\n              onBlur: nameBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              required: true,\n              className: `email_ip ${!EmailInputHasError ? \"noError\" : \"error\"}`,\n              placeholder: \"EMAIL\",\n              onChange: EmailChangedHandler,\n              value: enteredEmail,\n              onBlur: EmailBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"90%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              className: `message ${!MsgInputHasError ? \"noError\" : \"error\"}`,\n              placeholder: \"MESSAGE\",\n              onChange: MsgChangedHandler,\n              value: enteredMsg,\n              onBlur: MsgBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !FormIsValid,\n            className: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact_Me, \"jAs3vVVjyAaEPAzudRt/0ovDeVU=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c3 = Contact_Me;\nexport default Contact_Me;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckTextIsValid\");\n$RefreshReg$(_c2, \"CheckEmailIsValid\");\n$RefreshReg$(_c3, \"Contact_Me\");","map":{"version":3,"sources":["D:/Web development/Start_Any_Project/01-starting-project/src/Components/Contact_Me/contact_me.js"],"names":["Fragment","useState","Method","useInput","Thanks","React","CheckTextIsValid","value","trim","CheckEmailIsValid","includes","Contact_Me","display","SetDisplay","MessageHandler","setTimeout","DisplayChanger","enteredName","hasError","nameInputHasError","ValueChangeHandler","nameChangedHandler","InputBlurHandler","nameBlurHandler","isValid","nameIsValid","reset","resetInputName","enteredEmail","EmailInputHasError","EmailChangedHandler","EmailBlurHandler","EmailIsValid","resetInputEmail","enteredMsg","MsgInputHasError","MsgChangedHandler","MsgBlurHandler","MsgIsValid","resetInputMsg","UserData","Name","Email","M","SendData","Data","fetch","method","body","JSON","stringify","FormSubmitHandler","event","preventDefault","FormIsValid","width"],"mappings":"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","sourcesContent":["import { Fragment } from \"react/cjs/react.production.min\";\r\nimport { useState } from \"react\";\r\nimport Method from \"../ContactME/methods\";\r\nimport useInput from \"../../Hooks/user-input\";\r\nimport Thanks from \"../ThankModal/Thanks\";\r\nimport React from \"react\";\r\nimport \"./contact_me.css\";\r\n\r\nconst CheckTextIsValid = (value) => {\r\n  return value.trim() !== \"\";\r\n};\r\n\r\nconst CheckEmailIsValid = (value) => {\r\n  return value.includes(\"@\");\r\n};\r\n\r\nconst Contact_Me = () => {\r\n  const [display, SetDisplay] = useState(false);\r\n\r\n  const MessageHandler = () => {\r\n    setTimeout(() => {\r\n      SetDisplay(true);\r\n    }, 100);\r\n  };\r\n\r\n  const DisplayChanger = () => {\r\n    SetDisplay(false);\r\n  };\r\n\r\n  const {\r\n    value: enteredName,\r\n    hasError: nameInputHasError,\r\n    ValueChangeHandler: nameChangedHandler,\r\n    InputBlurHandler: nameBlurHandler,\r\n    isValid: nameIsValid,\r\n    reset: resetInputName,\r\n  } = useInput(CheckTextIsValid);\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    hasError: EmailInputHasError,\r\n    ValueChangeHandler: EmailChangedHandler,\r\n    InputBlurHandler: EmailBlurHandler,\r\n    isValid: EmailIsValid,\r\n    reset: resetInputEmail,\r\n  } = useInput(CheckEmailIsValid);\r\n\r\n  const {\r\n    value: enteredMsg,\r\n    hasError: MsgInputHasError,\r\n    ValueChangeHandler: MsgChangedHandler,\r\n    InputBlurHandler: MsgBlurHandler,\r\n    isValid: MsgIsValid,\r\n    reset: resetInputMsg,\r\n  } = useInput(CheckTextIsValid);\r\n\r\n  const UserData = [{ Name: enteredName, Email: enteredEmail, M: enteredMsg }];\r\n\r\n  const SendData = (Data) => {\r\n    fetch(\"https://prians-9c7e3-default-rtdb.firebaseio.com/data.json\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(Data),\r\n    });\r\n  };\r\n\r\n  const FormSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    resetInputName();\r\n    resetInputEmail();\r\n    resetInputMsg();\r\n    SendData(UserData);\r\n    MessageHandler();\r\n  };\r\n\r\n  let FormIsValid = false;\r\n\r\n  if (nameIsValid && EmailIsValid && MsgIsValid) FormIsValid = true;\r\n\r\n  return (\r\n    <Fragment>\r\n      {display && <Thanks onClose={DisplayChanger}></Thanks>}\r\n      <div className=\"contact_me_container\">\r\n        <h1 className=\"contact_me_heading\">Contact_Me_</h1>\r\n        <div className=\"data_container\">\r\n          <div className=\"contact_methods\">\r\n            <Method></Method>\r\n          </div>\r\n          <form className=\"contact_details\" onSubmit={FormSubmitHandler}>\r\n            <div className=\"name_email\">\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className={`name_ip ${\r\n                  !nameInputHasError ? \"noError\" : \"error\"\r\n                }`}\r\n                placeholder=\"NAME\"\r\n                onChange={nameChangedHandler}\r\n                value={enteredName}\r\n                onBlur={nameBlurHandler}\r\n              ></input>\r\n              <input\r\n                type=\"email\"\r\n                required\r\n                className={`email_ip ${\r\n                  !EmailInputHasError ? \"noError\" : \"error\"\r\n                }`}\r\n                placeholder=\"EMAIL\"\r\n                onChange={EmailChangedHandler}\r\n                value={enteredEmail}\r\n                onBlur={EmailBlurHandler}\r\n              ></input>\r\n            </div>\r\n            <div style={{ width: \"90%\" }}>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className={`message ${!MsgInputHasError ? \"noError\" : \"error\"}`}\r\n                placeholder=\"MESSAGE\"\r\n                onChange={MsgChangedHandler}\r\n                value={enteredMsg}\r\n                onBlur={MsgBlurHandler}\r\n              ></input>\r\n            </div>\r\n            <button type=\"submit\" disabled={!FormIsValid} className=\"submit\">\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contact_Me;\r\n"]},"metadata":{},"sourceType":"module"}