{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst userInput = ValidateValue => {\n  _s();\n\n  const [enteredValue, SetEnteredValue] = useState(\"\");\n  const [Istouched, SetIsTouched] = useState(false);\n  const valueIsValid = ValidateValue(enteredValue);\n  const hasError = !valueIsValid && Istouched;\n\n  const ValueChangeHandler = event => {\n    SetEnteredValue(event.target.value);\n    SetIsValid(valueIsValid);\n  };\n\n  const InputBlurHandler = () => {\n    SetIsTouched(true);\n  };\n\n  return {\n    value: enteredValue,\n    hasError,\n    ValueChangeHandler,\n    InputBlurHandler,\n    isValid: valueIsValid\n  };\n};\n\n_s(userInput, \"XMDzDgbTScStqLv9bZ0+nOKGRag=\");\n\nexport default userInput;","map":{"version":3,"sources":["D:/Web development/Start_Any_Project/01-starting-project/src/Hooks/user-input.js"],"names":["useState","userInput","ValidateValue","enteredValue","SetEnteredValue","Istouched","SetIsTouched","valueIsValid","hasError","ValueChangeHandler","event","target","value","SetIsValid","InputBlurHandler","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAIC,aAAD,IAAmB;AAAA;;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;AAEA,QAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACpCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACAC,IAAAA,UAAU,CAACN,YAAD,CAAV;AACD,GAHD;;AAIA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAGA,SAAO;AACLM,IAAAA,KAAK,EAAET,YADF;AAELK,IAAAA,QAFK;AAGLC,IAAAA,kBAHK;AAILK,IAAAA,gBAJK;AAKLC,IAAAA,OAAO,EAACR;AALH,GAAP;AAOD,CArBD;;GAAMN,S;;AAuBN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst userInput = (ValidateValue) => {\r\n  const [enteredValue, SetEnteredValue] = useState(\"\");\r\n  const [Istouched, SetIsTouched] = useState(false);\r\n\r\n  const valueIsValid = ValidateValue(enteredValue);\r\n  const hasError = !valueIsValid && Istouched;\r\n\r\n  const ValueChangeHandler = (event) => {\r\n    SetEnteredValue(event.target.value);\r\n    SetIsValid(valueIsValid);\r\n  };\r\n  const InputBlurHandler = () => {\r\n    SetIsTouched(true);\r\n  };\r\n  return {\r\n    value: enteredValue,\r\n    hasError,\r\n    ValueChangeHandler,\r\n    InputBlurHandler,\r\n    isValid:valueIsValid\r\n  };\r\n};\r\n\r\nexport default userInput;\r\n"]},"metadata":{},"sourceType":"module"}