import './index.html';
import configureStore from './store';
import { bindActionCreators } from '../dist/rdux';
import {
  addLog,
  clearLogs,
  setTime,
} from './actions';

const store = configureStore();

const { addLog: boundAddLog } = bindActionCreators({ addLog }, store.dispatch);

const timeContainer = document.querySelector('#time');
const logsContainer = document.querySelector('#logs');

const unsubscribeTime = store.subscribe(() => {
  console.log('Time subscribe');
  timeContainer.innerHTML = store.getState().time.time;
});

store.subscribe(() => {
  console.log('Logs subscribe');
  const { logs } = store.getState().log;
  if (logs.length) {
    logsContainer.innerHTML += `<div>${logs[logs.length - 1]}</div>`;
  } else {
    logsContainer.innerHTML = '';
  }
}, ['state.log.logs']);

boundAddLog('Init app');

let seconds = 0;

const interval = setInterval(() => {
  store.dispatch(setTime((new Date()).getTime()));
  seconds += 1;
  if (seconds === 5) {
    boundAddLog('Unsubscribe timer');
    unsubscribeTime();
  }
  if (seconds === 7) {
    boundAddLog('Clear interval');
    clearInterval(interval);
    setTimeout(() => store.dispatch(clearLogs()), 1000);
  }
}, 1000);

boundAddLog('Init interval');
